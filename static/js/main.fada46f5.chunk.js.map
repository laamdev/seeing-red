{"version":3,"sources":["assets/hero-video.mp4","hooks/useDocumentScrollThrottled.js","components/Drawer/DrawerToggle.js","components/Layout/Header/Header.js","components/Drawer/Drawer.js","components/Backdrop/Backdrop.js","hooks/useKeyboardEvent.js","app/App.js","views/Home/Home.js","views/Weather/Weather.js","methods/generalMethods.js","serviceWorker.js","index.js"],"names":["module","exports","useDocumentScrollThrottled","callback","useState","setScrollPosition","previousScrollTop","handleDocumentScrollThrottled","throttle","currentScrollTop","document","documentElement","body","scrollTop","previousPosition","console","log","useEffect","window","addEventListener","removeEventListener","DrawerToggle","toggleHandler","className","onClick","Header","hideHeader","setHideHeader","showShadow","setShowShadow","callbackData","isScrolledDown","isMinimumScrolled","setTimeout","shadowStyle","hiddenStyle","to","src","alt","Drawer","drawerIsOpen","drawerClasses","Backdrop","backdropClickHandler","useKeyboardEvent","key","handler","event","App","backdrop","children","setDrawerIsOpen","Home","heroVideo","autoPlay","loop","muted","title","data-aos","Weather","weather","setWeather","load","setLoad","error","setError","url","Promise","resolve","reject","axios","get","then","res","data","catch","err","season_container","today","sol_keys","length","season","Season","style","background","message","AT","mx","toFixed","mn","Boolean","location","hostname","match","AOS","init","duration","once","ReactDOM","render","basename","process","exact","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fada46f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero-video.fcb140fa.mp4\";","import { useState, useEffect } from \"react\";\r\nimport { throttle } from \"lodash\";\r\n\r\nfunction useDocumentScrollThrottled(callback) {\r\n  // the first useState argument is blank.\r\n  // we wonâ€™t actually be using that value because we will be grabbing the scrollTop directly.\r\n  const [, setScrollPosition] = useState(0);\r\n  let previousScrollTop = 0;\r\n\r\n  function handleDocumentScroll() {\r\n    const { scrollTop: currentScrollTop } =\r\n      document.documentElement || document.body;\r\n\r\n    setScrollPosition(previousPosition => {\r\n      previousScrollTop = previousPosition;\r\n      return currentScrollTop;\r\n    });\r\n\r\n    console.log(`current scroll ${currentScrollTop}`);\r\n    console.log(`previous scroll ${previousScrollTop}`);\r\n\r\n    //we will pass a callback to the function so that it can return the scroll data back to the <Header /> component.\r\n    callback({\r\n      previousScrollTop,\r\n      currentScrollTop\r\n    });\r\n  }\r\n\r\n  //wrap handleDocumentScroll() inside of a throttle function so that it will fire at most every 250ms\r\n  //throttle: Guaranteeing a constant flow of executions every X milliseconds. Checks every 250ms the scroll position to trigger an event.\r\n\r\n  const handleDocumentScrollThrottled = throttle(handleDocumentScroll, 250);\r\n\r\n  //useEffect hook has two purposes:\r\n  //1) Registers the scroll event listener on < Header /> mount\r\n  //2) Removes the event listener on unmount\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleDocumentScrollThrottled);\r\n\r\n    // the final empty array argument ensures that our useEffect hook only runs one time on mount (we only want to register the scroll listener once).\r\n    // useEffect would run after every single render if we didn't provide this last empty array argument.\r\n    // it is also possible to call it conditionally by passing the array some parameters\r\n    return () =>\r\n      window.removeEventListener(\"scroll\", handleDocumentScrollThrottled);\r\n  }, [handleDocumentScrollThrottled]);\r\n}\r\n\r\nexport default useDocumentScrollThrottled;\r\n","import React from \"react\";\r\n\r\nimport \"./DrawerToggle.scss\";\r\n\r\nconst DrawerToggle = ({ toggleHandler }) => {\r\n  return (\r\n    <button className=\"toggle-button\" onClick={toggleHandler}>\r\n      <span className=\"toggle-button__line\"></span>\r\n      <span className=\"toggle-button__line\"></span>\r\n      <span className=\"toggle-button__line\"></span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DrawerToggle;\r\n","import \"./Header.scss\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport useDocumentScrollThrottled from \"../../../hooks/useDocumentScrollThrottled\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DrawerToggle from \"../../Drawer/DrawerToggle\";\r\n\r\nfunction Header({ toggleHandler }) {\r\n  const [hideHeader, setHideHeader] = useState(false);\r\n  const [showShadow, setShowShadow] = useState(false);\r\n\r\n  const MINIMUM_SCROLL = 80;\r\n  const TIMEOUT_DELAY = 400;\r\n\r\n  //we first call our useDocumentScrollThrottled utility \"hook\" function\r\n  useDocumentScrollThrottled(callbackData => {\r\n    //we capture the previousScrollTop and currentScrollTop values that will be passed back to us when the callback function is invoked on scroll\r\n    //Did you see how we captured the previous scrollTop value? This is one nice feature of useState hooks; they always give us access to the previously stored value!\r\n    const { previousScrollTop, currentScrollTop } = callbackData;\r\n    //we take these arguments and determine if the user has scrolled down (isScrolledDown)\r\n    const isScrolledDown = previousScrollTop < currentScrollTop;\r\n    //and whether or not the minimum scroll position has been reached (isMinimumScrolled).\r\n    const isMinimumScrolled = currentScrollTop > MINIMUM_SCROLL;\r\n\r\n    //We then use these values to pass booleans to our useState functions.\r\n    //Finally, our classNames now get set to the correct values when the setShowShadow and setHideHeader hooks are called!\r\n\r\n    setShowShadow(currentScrollTop > 2);\r\n\r\n    //we place the setHideHeader function inside of a setTimeout to add a bit of delay effect to the headerâ€™s hide/show movement after scrolling\r\n    setTimeout(() => {\r\n      setHideHeader(isScrolledDown && isMinimumScrolled);\r\n    }, TIMEOUT_DELAY);\r\n  });\r\n\r\n  const shadowStyle = showShadow ? \"shadow\" : \"\";\r\n  const hiddenStyle = hideHeader ? \"hidden\" : \"\";\r\n\r\n  return (\r\n    <header className={`header ${hiddenStyle} ${shadowStyle}`}>\r\n      <nav className=\"header__nav\">\r\n        <div className=\"header__logo\">\r\n          <Link to=\"\" className=\"header__logo__letters\">\r\n            seeing\r\n            <img\r\n              className=\"header__logo__icon\"\r\n              src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/mars-icon.svg?alt=media&token=45304e72-ddf7-44f8-bd68-b3005af53638\"\r\n              alt=\"Seeing Red logo\"\r\n            />\r\n            RED\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"spacer\" />\r\n\r\n        <div className=\"header__links\">\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/weather\" className=\"header__links__link\">\r\n                Weather\r\n              </Link>\r\n              <Link to=\"/rovers\" className=\"header__links__link\">\r\n                Rovers\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"header__toggle-button\">\r\n          <DrawerToggle toggleHandler={toggleHandler} />\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Drawer.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Drawer = ({ drawerIsOpen, toggleHandler }) => {\r\n  let drawerClasses = \"drawer\";\r\n\r\n  if (drawerIsOpen) {\r\n    drawerClasses = \"drawer show\";\r\n  }\r\n\r\n  return (\r\n    <nav className={drawerClasses}>\r\n      <button onClick={toggleHandler} className=\"drawer__toggle\">\r\n        X\r\n      </button>\r\n      <Link to=\"/weather\" className=\"drawer__link\" onClick={toggleHandler}>\r\n        Weather\r\n      </Link>\r\n      <Link to=\"/rovers\" className=\"drawer__link\" onClick={toggleHandler}>\r\n        Rovers\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Drawer;\r\n","import React from \"react\";\r\nimport \"./Backdrop.scss\";\r\n\r\nconst Backdrop = ({ backdropClickHandler }) => (\r\n  <div className=\"backdrop\" onClick={backdropClickHandler}></div>\r\n);\r\n\r\nexport default Backdrop;\r\n","import { useEffect } from \"react\";\r\n\r\nconst useKeyboardEvent = (key, callback) => {\r\n  useEffect(() => {\r\n    const handler = function(event) {\r\n      if (event.key === key) {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handler);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handler);\r\n    };\r\n  }, [callback, key]);\r\n};\r\n\r\nexport default useKeyboardEvent;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Header from \"../components/Layout/Header/Header\";\r\n// import Footer from \"../components/Layout/Footer/Footer\";\r\n\r\nimport Drawer from \"../components/Drawer/Drawer\";\r\nimport Backdrop from \"../components/Backdrop/Backdrop\";\r\n\r\nimport useKeyboardEvent from \"../hooks/useKeyboardEvent\";\r\n\r\nconst App = ({ children }) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  // const [backdropIsOpen, setBackdropIsOpen] = useState(false);\r\n\r\n  //----------------opens drawer when HAMBURGUER MENU is clicked\r\n  //----------------closes drawer when BACKDROP is clicked\r\n  const toggleHandler = () => {\r\n    setDrawerIsOpen(!drawerIsOpen);\r\n  };\r\n\r\n  //----------------closes drawer when ESC is clicked\r\n  useKeyboardEvent(\"Escape\", () => {\r\n    if (drawerIsOpen) {\r\n      setDrawerIsOpen(!drawerIsOpen);\r\n    }\r\n  });\r\n\r\n  //----------------conditional rendering of backdrop\r\n\r\n  let backdrop;\r\n\r\n  if (drawerIsOpen) {\r\n    backdrop = <Backdrop toggleHandler={toggleHandler} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App page-container\">\r\n      <Header toggleHandler={toggleHandler} />\r\n      <Drawer drawerIsOpen={drawerIsOpen} toggleHandler={toggleHandler} />\r\n\r\n      {backdrop}\r\n\r\n      {children}\r\n\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport \"./Home.scss\";\r\nimport heroVideo from \"../../assets/hero-video.mp4\";\r\n\r\n//STYLES\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <header className=\"hero container\">\r\n        <div className=\"hero__video-wrap\">\r\n          <video src={heroVideo} autoPlay loop muted>\r\n            <img\r\n              src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/hero-bg.jpg?alt=media&token=897bc3fd-3841-4ccd-8f6a-397d530e23dd\"\r\n              title=\"Your browser does not support the &lt;video&gt; tag\"\r\n              alt=\"video of Mars rotating\"\r\n            />\r\n            Video not supported\r\n          </video>\r\n        </div>\r\n\r\n        <div className=\"hero__overlay\" />\r\n        <div className=\"hero__content\">\r\n          <h1 className=\"hero__title\">We are the Martians</h1>\r\n          <h2 className=\"hero__subtitle\">Join the startup planet</h2>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"services\">\r\n        <section className=\"service\">\r\n          <img\r\n            className=\"service__image\"\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/rocket-1.svg?alt=media&token=024575eb-c9ef-4055-8e1c-7a095b6632cc\"\r\n            alt=\"rocket launching\"\r\n            data-aos=\"fade-in\"\r\n          />\r\n\r\n          <div className=\"service__content\" data-aos=\"fade-in\">\r\n            <h2 className=\"service__title\">Fly with our state-of-the-art rocket fleet</h2>\r\n            <p>We have partenered with Space X to give you the quickest and safest alternative in outer space travel.</p>\r\n            <button className=\"service__btn\">Fly!</button>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"service middle\">\r\n          <div className=\"service__content\" data-aos=\"fade-in\">\r\n            <h2 className=\"service__title\">Explore the Red Planet any way you want</h2>\r\n            <p>We offer a series of tour packages that will allow you to travel around Mars and its wonders in the fashion that's best adjusted to your needs and preferences.</p>\r\n            <button className=\"service__btn\">Explore!</button>\r\n          </div>\r\n\r\n          <img\r\n            className=\"service__image\"\r\n            data-aos=\"fade-in\"\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/planet-1.svg?alt=media&token=ede9fd17-15f6-4a3f-81ca-e72ada512066\"\r\n            alt=\"rocket launching\"\r\n          />\r\n        </section>\r\n\r\n        <section className=\"service\">\r\n          <img\r\n            className=\"service__image\"\r\n            data-aos=\"fade-in\"\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/rocket-3.svg?alt=media&token=7891e5eb-90c3-4d3b-8cdd-c1932a9105a8\"\r\n            alt=\"rocket launching\"\r\n          />\r\n\r\n          <div className=\"service__content\" data-aos=\"fade-in\">\r\n            <h2 className=\"service__title\">Feel at home like the Jetsons!</h2>\r\n            <p>We offer a wide range of luxurious villa-pods, fully equiped with high-speed interplanetary internet, insta-food preparation units, and an optional robo-maid.</p>\r\n            <button className=\"service__btn\">Live!</button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getApiCall } from \"../../methods/generalMethods\";\r\nimport \"./Weather.scss\";\r\n\r\nconst Weather = () => {\r\n  const [weather, setWeather] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getApiCall(\"https://api.nasa.gov/insight_weather/?api_key=FTxOBfLQCG314D5aXesXFxGafjtCdj3SWlJYCgJ4&feedtype=json&ver=1.0\")\r\n      .then(res => {\r\n        setWeather(res);\r\n        setLoad(true);\r\n      })\r\n      .catch(err => {\r\n        setError(err);\r\n        setLoad(true);\r\n      });\r\n  }, []);\r\n\r\n  if (load) {\r\n    const today = weather.sol_keys[weather.sol_keys.length - 1];\r\n\r\n    const season = weather[today].Season;\r\n\r\n    let season_container;\r\n\r\n    //! < CONDITIONAL RENDERING OF SEASON ICON\r\n    if (season === \"spring\") {\r\n      season_container = (\r\n        <div className=\"weather__season\" style={{ background: \"#038C3E\" }}>\r\n          <img\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/spring.svg?alt=media&token=de8eacaf-785d-41ed-8d93-06d5ef8d12bf\"\r\n            alt=\"spring season icon\"\r\n            className=\"weather__season__icon icon\"\r\n          />\r\n          <p className=\"weather__season__text text\">{season}</p>\r\n        </div>\r\n      );\r\n    } else if (season === \"summer\") {\r\n      season_container = (\r\n        <div className=\"weather__season\" style={{ background: \"linear-gradient(to right, #ff8008, #ffc837)\" }}>\r\n          <img\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/summer.svg?alt=media&token=c1c802db-e89c-4733-87b4-734b95370d09\"\r\n            alt=\"summer season icon\"\r\n            className=\"weather__season__icon icon\"\r\n          />\r\n          <p className=\"weather__season__text text\">{season}</p>\r\n        </div>\r\n      );\r\n    } else if (season === \"fall\") {\r\n      season_container = (\r\n        <div className=\"weather__season\" style={{ background: \"#D9420B\" }}>\r\n          <img\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/fall.svg?alt=media&token=74b0e58a-7090-4f5a-8dfe-2b0c532757b6\"\r\n            alt=\"fall season icon\"\r\n            className=\"weather__season__icon icon\"\r\n          />\r\n          <p className=\"weather__season__text text\">{season}</p>\r\n        </div>\r\n      );\r\n    } else if (season === \"winter\") {\r\n      season_container = (\r\n        <div className=\"weather__season\" style={{ background: \"#03738C\" }}>\r\n          <img\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/winter.svg?alt=media&token=d9095b14-0524-4247-ba4c-93f8b2144f4e\"\r\n            alt=\"winter season icon\"\r\n            className=\"weather__season__icon icon\"\r\n          />\r\n          <p className=\"weather__season__text text\">{season}</p>\r\n        </div>\r\n      );\r\n    }\r\n    //! ------------------------------------------------------------------------------------------------------------------------\r\n    return (\r\n      <section className=\"weather\">\r\n        {error ? (\r\n          <p>{error.message}</p>\r\n        ) : (\r\n          <>\r\n            <div className=\"weather__day\">\r\n              <p>sol {today}</p>\r\n            </div>\r\n\r\n            <div className=\"weather__temp__max\">\r\n              <img\r\n                className=\"weather__temp__icon icon\"\r\n                src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/max-temp.svg?alt=media&token=587ae349-b4e3-438e-b16e-b1657ac2021c\"\r\n                alt=\"maximum temperature icon\"\r\n              />\r\n              <p className=\"weather__temp__text text\">{weather[today].AT.mx.toFixed(1)}Â°C</p>\r\n            </div>\r\n\r\n            <div className=\"weather__temp__min\">\r\n              <img\r\n                className=\"weather__temp__icon icon\"\r\n                src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/min-temp.svg?alt=media&token=9c136708-306f-4a68-9948-83406aa1ea25\"\r\n                alt=\"minimum temperature icon\"\r\n              />\r\n              <p className=\"weather__temp__text text\">{weather[today].AT.mn.toFixed(1)}Â°C</p>\r\n            </div>\r\n            {season_container}\r\n          </>\r\n        )}\r\n      </section>\r\n    );\r\n  } else {\r\n    return <div>Loading...</div>;\r\n  }\r\n};\r\n\r\nexport default Weather;\r\n\r\n// https://api.nasa.gov/insight_weather/?api_key=FTxOBfLQCG314D5aXesXFxGafjtCdj3SWlJYCgJ4&feedtype=json&ver=1.0\r\n","import axios from \"axios\";\r\n\r\nexport const getApiCall = url => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(url)\r\n      .then(res => {\r\n        resolve(res.data);\r\n      })\r\n      .catch(err => reject(err));\r\n  });\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// STYLES\r\nimport \"./index.scss\";\r\n\r\n// REACT\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n//  COMPONENTS\r\nimport App from \"./app/App\";\r\nimport Home from \"./views/Home/Home\";\r\nimport Weather from \"./views/Weather/Weather\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\"; // You can also use <link> for styles\r\n\r\nAOS.init({\r\n  duration: 1200,\r\n  once: true\r\n});\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <App>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n\r\n        <Route path=\"/weather\" component={Weather} />\r\n      </Switch>\r\n    </App>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}