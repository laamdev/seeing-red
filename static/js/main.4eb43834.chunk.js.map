{"version":3,"sources":["views/Home/hero-video.mp4","hooks/useDocumentScrollThrottled.js","components/Drawer/DrawerToggle.js","components/Layout/Header/Header.js","components/Layout/Footer/Footer.js","components/Drawer/Drawer.js","components/Backdrop/Backdrop.js","views/Home/Home.js","views/Weather/Weather.js","methods/generalMethods.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useDocumentScrollThrottled","callback","useState","setScrollPosition","previousScrollTop","handleDocumentScrollThrottled","throttle","currentScrollTop","document","documentElement","body","scrollTop","previousPosition","console","log","useEffect","window","addEventListener","removeEventListener","drawerToggle","toggleHandler","className","onClick","Header","shouldHideHeader","setShouldHideHeader","shouldShowShadow","setShouldShowShadow","callbackData","isScrolledDown","isMinimumScrolled","setTimeout","shadowStyle","hiddenStyle","to","src","alt","footer","drawer","drawerClasses","drawerIsOpen","Backdrop","backdropClickHandler","Home","heroVideo","autoPlay","loop","muted","title","data-aos","Weather","weather","setWeather","load","setLoad","error","setError","url","Promise","resolve","reject","axios","get","then","res","data","catch","err","today","sol_keys","length","message","Season","AT","mn","mx","App","backdrop","children","setDrawerIsOpen","Boolean","location","hostname","match","AOS","init","duration","once","ReactDOM","render","basename","process","exact","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4eb43834.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero-video.fcb140fa.mp4\";","import { useState, useEffect } from \"react\";\nimport { throttle } from \"lodash\";\n\nfunction useDocumentScrollThrottled(callback) {\n  // the first useState argument is blank.\n  // we won’t actually be using that value because we will be grabbing the scrollTop directly.\n  const [scrollPosition, setScrollPosition] = useState(0);\n  let previousScrollTop = 0;\n\n  function handleDocumentScroll() {\n    const { scrollTop: currentScrollTop } =\n      document.documentElement || document.body;\n\n    setScrollPosition(previousPosition => {\n      previousScrollTop = previousPosition;\n      return currentScrollTop;\n    });\n\n    console.log(`current scroll ${currentScrollTop}`);\n    console.log(`previous scroll ${previousScrollTop}`);\n\n    //we will pass a callback to the function so that it can return the scroll data back to the <Header /> component.\n    callback({\n      previousScrollTop,\n      currentScrollTop\n    });\n  }\n\n  //wrap handleDocumentScroll() inside of a throttle function so that it will fire at most every 250ms\n  //throttle: Guaranteeing a constant flow of executions every X milliseconds. Checks every 250ms the scroll position to trigger an event.\n\n  const handleDocumentScrollThrottled = throttle(handleDocumentScroll, 250);\n\n  //useEffect hook has two purposes:\n  //1) Registers the scroll event listener on < Header /> mount\n  //2) Removes the event listener on unmount\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleDocumentScrollThrottled);\n\n    // the final empty array argument ensures that our useEffect hook only runs one time on mount (we only want to register the scroll listener once).\n    // useEffect would run after every single render if we didn't provide this last empty array argument.\n    // it is also possible to call it conditionally by passing the array some parameters\n    return () =>\n      window.removeEventListener(\"scroll\", handleDocumentScrollThrottled);\n  }, []);\n}\n\nexport default useDocumentScrollThrottled;\n","import React from \"react\";\n\nimport \"./DrawerToggle.scss\";\n\nconst drawerToggle = ({ toggleHandler }) => {\n  return (\n    <button className=\"toggle-button\" onClick={toggleHandler}>\n      <span className=\"toggle-button__line\"></span>\n      <span className=\"toggle-button__line\"></span>\n      <span className=\"toggle-button__line\"></span>\n    </button>\n  );\n};\n\nexport default drawerToggle;\n","import React, { useState } from \"react\";\n\nimport useDocumentScrollThrottled from \"../../../hooks/useDocumentScrollThrottled\";\n\nimport { Link } from \"react-router-dom\";\n\nimport DrawerToggle from \"../../Drawer/DrawerToggle\";\n\nimport \"./Header.scss\";\n\nfunction Header({ toggleHandler }) {\n  const [shouldHideHeader, setShouldHideHeader] = useState(false);\n  const [shouldShowShadow, setShouldShowShadow] = useState(false);\n\n  const MINIMUM_SCROLL = 80;\n  const TIMEOUT_DELAY = 400;\n\n  //we first call our useDocumentScrollThrottled utility \"hook\" function\n  useDocumentScrollThrottled(callbackData => {\n    //we capture the previousScrollTop and currentScrollTop values that will be passed back to us when the callback function is invoked on scroll\n    //Did you see how we captured the previous scrollTop value? This is one nice feature of useState hooks; they always give us access to the previously stored value!\n    const { previousScrollTop, currentScrollTop } = callbackData;\n    //we take these arguments and determine if the user has scrolled down (isScrolledDown)\n    const isScrolledDown = previousScrollTop < currentScrollTop;\n    //and whether or not the minimum scroll position has been reached (isMinimumScrolled).\n    const isMinimumScrolled = currentScrollTop > MINIMUM_SCROLL;\n\n    //We then use these values to pass booleans to our useState functions.\n    //Finally, our classNames now get set to the correct values when the setShouldShowShadow and setShouldHideHeader hooks are called!\n\n    setShouldShowShadow(currentScrollTop > 2);\n\n    //we place the setShouldHideHeader function inside of a setTimeout to add a bit of delay effect to the header’s hide/show movement after scrolling\n    setTimeout(() => {\n      setShouldHideHeader(isScrolledDown && isMinimumScrolled);\n    }, TIMEOUT_DELAY);\n  });\n\n  const shadowStyle = shouldShowShadow ? \"shadow\" : \"\";\n  const hiddenStyle = shouldHideHeader ? \"hidden\" : \"\";\n\n  return (\n    <header className={`header ${hiddenStyle} ${shadowStyle}`}>\n      <nav className=\"header__nav\">\n        <div className=\"header__logo\">\n          <Link to=\"\" className=\"header__logo__letters\">\n            seeing\n            <img\n              className=\"header__logo__icon\"\n              src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/mars-icon.svg?alt=media&token=45304e72-ddf7-44f8-bd68-b3005af53638\"\n              alt=\"Seeing Red logo\"\n            />\n            RED\n          </Link>\n        </div>\n\n        <div className=\"spacer\" />\n\n        <div className=\"header__links\">\n          <ul>\n            <li>\n              <Link to=\"/weather\" className=\"header__links__link\">\n                Weather\n              </Link>\n            </li>\n\n            {/* <li>\n              <NavLink className=\"header__links__link\" to=\"/contact\">\n                Contact\n              </NavLink>\n            </li> */}\n          </ul>\n        </div>\n\n        <div className=\"header__toggle-button\">\n          <DrawerToggle toggleHandler={toggleHandler} />\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./Footer.scss\";\n\nconst footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__items\">\n        <ul>\n          <li>\n            <small>©2019 Seeing Red</small>\n          </li>\n        </ul>\n      </div>\n    </footer>\n  );\n};\n\nexport default footer;\n","import React from \"react\";\nimport \"./Drawer.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst drawer = ({ drawerIsOpen }) => {\n  let drawerClasses = \"drawer\";\n\n  if (drawerIsOpen) {\n    drawerClasses = \"drawer show\";\n  }\n\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n        <li>\n          <Link to=\"/weather\">weather</Link> />\n        </li>\n\n        {/* <li>\n          <a href=\"/\">Destinations</a>\n        </li>\n\n        <li>\n          <a href=\"/\">Contact</a>\n        </li> */}\n      </ul>\n    </nav>\n  );\n};\n\nexport default drawer;\n","import React from \"react\";\nimport \"./Backdrop.scss\";\n\nconst Backdrop = ({ backdropClickHandler }) => (\n  <div className=\"backdrop\" onClick={backdropClickHandler}></div>\n);\n\nexport default Backdrop;\n","import React from \"react\";\nimport \"./Home.scss\";\nimport heroVideo from \"./hero-video.mp4\";\n\nconst Home = () => {\n  return (\n    <>\n      <header className=\"hero container\">\n        <div className=\"hero__video-wrap\">\n          <video src={heroVideo} autoPlay loop muted>\n            <img\n              src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/hero-bg.jpg?alt=media&token=897bc3fd-3841-4ccd-8f6a-397d530e23dd\"\n              title=\"Your browser does not support the &lt;video&gt; tag\"\n            />\n            Video not supported\n          </video>\n        </div>\n\n        <div className=\"hero__overlay\" />\n        <div className=\"hero__content\">\n          <h1 className=\"hero__title\">We are the Martians</h1>\n        </div>\n      </header>\n\n      <div className=\"services\">\n        <section className=\"service\">\n          <img\n            className=\"service__image\"\n            src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/rocket-1.svg?alt=media&token=024575eb-c9ef-4055-8e1c-7a095b6632cc\"\n            alt=\"rocket launching\"\n            data-aos=\"fade-in\"\n          />\n\n          <div className=\"service__content\" data-aos=\"fade-in\">\n            <h2 className=\"service__title\">\n              Fly with our state-of-the-art rocket fleet\n            </h2>\n            <p>\n              We have partenered with Space X to give you the quickest and\n              safest alternative in outer space travel.\n            </p>\n            <button className=\"service__btn\">Learn more</button>\n          </div>\n        </section>\n\n        <section className=\"service middle\">\n          <div className=\"service__content\" data-aos=\"fade-in\">\n            <h2 className=\"service__title\">\n              Explore the Red Planet any way you want\n            </h2>\n            <p>\n              We offer a series of tour packages that will allow you to travel\n              around Mars and its wonders in the fashion that's best adjusted to\n              your needs and preferences.\n            </p>\n            <button className=\"service__btn\">Learn more</button>\n          </div>\n\n          <img\n            className=\"service__image\"\n            data-aos=\"fade-in\"\n            src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/planet-1.svg?alt=media&token=ede9fd17-15f6-4a3f-81ca-e72ada512066\"\n            alt=\"rocket launching\"\n          />\n        </section>\n\n        <section className=\"service\">\n          <img\n            className=\"service__image\"\n            data-aos=\"fade-in\"\n            src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/rocket-3.svg?alt=media&token=7891e5eb-90c3-4d3b-8cdd-c1932a9105a8\"\n            alt=\"rocket launching\"\n          />\n\n          <div className=\"service__content\" data-aos=\"fade-in\">\n            <h2 className=\"service__title\">Feel at home like the Jetsons!</h2>\n            <p>\n              We offer a wide range of luxurious villa-pods, fully equiped with\n              high-speed interplanetary internet, insta-food preparation units,\n              and an optional robo-maid.\n            </p>\n            <button className=\"service__btn\">Learn more</button>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { getItem } from \"../../methods/generalMethods\";\nimport \"./Weather.scss\";\n\nconst Weather = () => {\n  const [weather, setWeather] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    getItem(\n      \"https://api.nasa.gov/insight_weather/?api_key=FTxOBfLQCG314D5aXesXFxGafjtCdj3SWlJYCgJ4&feedtype=json&ver=1.0\"\n    )\n      .then(res => {\n        setWeather(res);\n        setLoad(true);\n      })\n      .catch(err => {\n        setError(err);\n        setLoad(true);\n      });\n  }, []);\n\n  if (load) {\n    const today = weather.sol_keys[weather.sol_keys.length - 1];\n\n    return (\n      <section className=\"weather\">\n        {error ? (\n          <p>{error.message}</p>\n        ) : (\n          <>\n            <h1 className=\"weather__today\">sol {today}</h1>\n\n            <div>\n              <img\n                src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/spring.svg?alt=media&token=de8eacaf-785d-41ed-8d93-06d5ef8d12bf\"\n                alt=\"\"\n                className=\"weather__temp-icon\"\n              />\n              <h2 className=\"weather__season\">{weather[today].Season}</h2>\n            </div>\n\n            <div className=\"weather__temp\">\n              <img\n                className=\"weather__temp-icon\"\n                src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/min-temp.svg?alt=media&token=9a574ef9-86aa-4e31-b0b0-ce4f14122006\"\n              />\n              <h3 className=\"weather__temp-min-max\">\n                min. {weather[today].AT.mn}°C\n              </h3>\n            </div>\n\n            <div className=\"weather__temp\">\n              <img\n                className=\"weather__temp-icon\"\n                src=\"https://firebasestorage.googleapis.com/v0/b/seeing-red.appspot.com/o/max-temp.svg?alt=media&token=24ca8a50-2cfd-4fc6-a5cd-a864b4a46fa4\"\n              />\n              <h3 className=\"weather__temp-min-max\">\n                max. {weather[today].AT.mx}°C\n              </h3>\n            </div>\n          </>\n        )}\n      </section>\n    );\n  } else {\n    return <div>Loading...</div>;\n  }\n};\n\nexport default Weather;\n\n// https://api.nasa.gov/insight_weather/?api_key=FTxOBfLQCG314D5aXesXFxGafjtCdj3SWlJYCgJ4&feedtype=json&ver=1.0\n","import axios from \"axios\";\n\nexport const getItem = url => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(err => reject(err));\n  });\n};\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Header from \"./components/Layout/Header/Header\";\nimport Footer from \"./components/Layout/Footer/Footer\";\n\nimport Drawer from \"./components/Drawer/Drawer\";\nimport Backdrop from \"./components/Backdrop/Backdrop\";\n\nimport Home from \"./views/Home/Home\";\nimport Weather from \"./views/Weather/Weather\";\nimport Contact from \"./views/Contact/Contact\";\n\nconst App = ({ children }) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const [backdropIsOpen, setBackdropIsOpen] = useState(false);\n\n  const toggleHandler = () => {\n    setDrawerIsOpen(!drawerIsOpen);\n  };\n\n  const backdropClickHandler = () => {\n    setDrawerIsOpen(!drawerIsOpen);\n  };\n\n  let backdrop;\n\n  if (drawerIsOpen) {\n    backdrop = <Backdrop backdropClickHandler={backdropClickHandler} />;\n  }\n\n  return (\n    <div className=\"App page-container\">\n      <Header toggleHandler={toggleHandler} />\n\n      <Drawer drawerIsOpen={drawerIsOpen} />\n      {backdrop}\n\n      {children}\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./views/Home/Home\";\nimport Weather from \"./views/Weather/Weather\";\n\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\"; // You can also use <link> for styles\n\nAOS.init({\n  duration: 1200,\n  once: true\n});\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n\n        <Route path=\"/weather\" component={Weather} />\n      </Switch>\n    </App>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}